# testing structure for Athena application
# this test-case is CERN AFS dependent since it use setup files located in /afs/cern.ch/sw/ganga/external/test-externals/1.0/noarch/ATLAS 

from GangaTest.Framework.utils import sleep_until_completed,file_contains,write_file,sleep_until_state
import getpass

joboption = '/tmp/ganga_athena_ng_anskel_dq2_testing_data-%s/AnalysisSkeleton_topOptions_v14220.py' % getpass.getuser()
archivefile = '/tmp/ganga_athena_ng_anskel_dq2_testing_data-%s/UserAnalysis-00003.tar.gz' % getpass.getuser()

config['TestingFramework']['timeout']=1200

j = Job()
j.name='GANGA_NG_ATHENA_ANALYSISSKELETON_TEST'
j.application=Athena()
j.application.atlas_release='14.2.20'
j.application.option_file=[ joboption ]
j.application.user_area=archivefile
j.application.max_events=100
j.inputdata=DQ2Dataset()
j.inputdata.dataset='mc08.105401.SU1_jimmy_susy.recon.AOD.e352_s462_r541_tid026109'
j.inputdata.type='DQ2_COPY'
#j.inputdata.type='FILE_STAGER'

#j.outputdata=DQ2OutputDataset()
j.outputdata=ATLASOutputDataset()
j.outputdata.outputdata=[ 'muTri.root' ]


j.splitter=DQ2JobSplitter()
j.splitter.numsubjobs=2
j.backend=NG()

#j.backend.CE='jeannedarc.hpc2n.umu.se'
#j.backend.CE='grad.uppmax.uu.se'
#j.backend.CE='grid.uio.no'
#j.backend.CE='ce01.titan.uio.no'

assert(j.submit()==True)

assert sleep_until_completed(j,1200)

j.remove()
