from GangaTest.Framework.utils import sleep_until_completed, write_file, file_contains
from os import mkdir
from os.path import join,basename
import tempfile

testdir=tempfile.mktemp()
mkdir(testdir)
testname=join(testdir,'input.txt')
write_file(testname,"This is a test\n")

# Job with a Unix command in
jcommand=Job(application=Executable(),backend=Dirac(CPUTime=300))
jcommand.application.args=['input.txt','output.txt']
jcommand.application.exe='cp'
jcommand.inputsandbox=[testname]
jcommand.outputsandbox=['output.txt']
assert(jcommand.submit())

# Job with a script
scriptname=tempfile.mktemp()
write_file(scriptname,"""#!/bin/bash
ls -l
cp input.txt output.txt
ls -l
""")
jscript=Job(application=Executable(),backend=Dirac(CPUTime=300))
jscript.application.args=['input.txt','output.txt']
jscript.application.exe=File(scriptname)
jscript.inputsandbox=[testname]
jscript.outputsandbox=['output.txt']
jscript.submit()

assert(sleep_until_completed(jcommand,1800))
assert(sleep_until_completed(jscript,1800))
assert jcommand.status == 'completed', 'Command job should complete'
assert jscript.status == 'completed', 'Script job should complete'

assert(file_contains(join(jcommand.outputdir,'output.txt'),'This is a test'))
assert(file_contains(join(jscript.outputdir,'output.txt'),'This is a test'))
