# testing structure for Athena application
# this test-case is CERN AFS dependent since it use setup files located in /afs/cern.ch/sw/ganga/external/test-externals/1.0/noarch/ATLAS 

from GangaTest.Framework.utils import sleep_until_completed,file_contains,write_file,sleep_until_state
import getpass,commands

joboption = '/tmp/ganga_ara_panda_testing_data-%s/gangaPandaARAExample_502.py' % getpass.getuser()
archivefile = '/tmp/ganga_ara_panda_testing_data-%s/sources.349b1195-3674-4a19-8770-70eb2d0b86bd.tar.gz' % getpass.getuser()
userareapath = '/tmp/ganga_ara_panda_testing_data-%s' % getpass.getuser()
config['TestingFramework']['timeout']=3600

j = Job()
j.application=Athena()
j.application.option_file=[ joboption ]
j.application.atlas_release='15.0.0'
j.application.atlas_exetype='PYARA'
j.application.user_area=archivefile
j.application.user_area_path = userareapath
j.application.atlas_run_config = {'input': {}, 'other': {}, 'output': {}}
j.application.atlas_run_dir = './'
j.inputdata=DQ2Dataset()
j.inputdata.dataset="fdr08_run2.0052283.physics_Muon.merge.AOD.o3_f8_m10"
j.inputdata.number_of_files=1
j.outputdata=DQ2OutputDataset()
j.outputdata.outputdata=['out1.root' ]
j.outputdata.datasetname='testing.%s'%commands.getoutput('uuidgen')
j.splitter=DQ2JobSplitter()
j.splitter.filesize=2
j.backend=Panda()
assert(j.submit()==True)

assert sleep_until_completed(j,3600)

# removing all jobs
j.remove()
