# make sure that the job is correctly commited at submit time

import sys
import os,new,types
from GangaTest.Framework.tests import MultipassTest

from Ganga.Utility.logging import getLogger
logger = getLogger(modulename=True)

class SubmissionCommit(MultipassTest):

    def __init__(self):
        MultipassTest.__init__(self,2)
        self.name = '/tmp/ganga.commit_test_data.123'
    
    def pass1(self):
        logger.info('running in commit mode')
        j = Job()
        logger.info('created')
        j.application = Executable(exe='/bin/date')
        try:
            j.backend = TestSubmitter()
        except:
            import unittest
            raise unittest.TestCase.failureException("Failed to load TestSubmitter")    
        logger.info('sub')
        j.submit()
        logger.info(j)
        file(self.name,'w').write(str(j.id))
        logger.info('saved job id %s to file %s'%(j.id,self.name))
        assert(j.backend.start_time != 0)

    def pass2(self):

        jobid = None
        try:
            jobid = int(file(self.name).read())
        except IOError:
            logger.error('failed to open file:',self.name)
        except ValueError:
            logger.error('failed to read file:',self.name)
        assert(jobid != None)    
        logger.info('running in checkout mode')
        os.remove(self.name)
        j = jobs(jobid)
        logger.info(j)
        assert(j.backend.start_time != 0)
        logger.info('test passed OK')
