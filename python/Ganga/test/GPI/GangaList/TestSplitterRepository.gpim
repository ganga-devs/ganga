from Ganga.GPIDev.Base.Proxy import addProxy,getProxyAttr,isProxy,isType
from Ganga.GPIDev.Lib.GangaList.GangaList import GangaList as gangaList
from GangaTest.Framework.tests import MultipassTest
import os
import pickle
import random
import string
import tempfile

class TestSplitterRepository(MultipassTest):

    def __init__(self):
        
        #not sure if I need to do this
        count = 0
        for m in dir(self):
            if m.startswith('pass'): count += 1
        MultipassTest.__init__(self,count)
        
        tmp_dir = os.path.dirname(tempfile.mktemp())
        self.fileName = os.path.join(tmp_dir,'numberStore.p')
    
    def pass1(self):
        """ First pass of this test"""

        j = Job(application = Root())
        j.application.args = [str(i*i) for i in xrange(10)]  
        
        args = []
        for i in xrange(10):
            args.append(j.application.args[:])
        j.splitter = ArgSplitter(args = args)
        pickle.dump(str(j.id),open(self.fileName,'w'))

    def pass2(self):
        """ Second pass of this multipass test"""

        id = int(pickle.load(open(self.fileName)))
        j = jobs(id)
        assert j, 'job should not be null'
        assert j.splitter.args
        
        j2 = Job()
        
        args = []
        for i in xrange(10):
            args.append(j.application.args[:])
        j2.splitter = GenericSplitter(values = args)
        pickle.dump(str(j2.id),open(self.fileName,'w'))

        
    def pass3(self):
        
        id = int(pickle.load(open(self.fileName)))
        j = jobs(id)
        assert j, 'job should not be null'
        assert j.splitter.values
      