from Ganga.GPIDev.Base.Proxy import addProxy,getProxyAttr,isProxy,isType
from Ganga.GPIDev.Lib.GangaList.GangaList import GangaList as gangaList
from GangaTest.Framework.tests import MultipassTest
import os
import pickle
import random
import string
import tempfile

class Savannah32342(MultipassTest):

    def __init__(self):
        
        #not sure if I need to do this
        count = 0
        for m in dir(self):
            if m.startswith('pass'): count += 1
        MultipassTest.__init__(self,count)
        
        tmp_dir = os.path.dirname(tempfile.mktemp())
        self.fileName = os.path.join(tmp_dir,'numberStore.p')
        
     
    
    
    def pass1(self):
        """ First pass of this test"""
        
        j = Job()
        j.splitter = ArgSplitter(args = [['A'],['B']])
        j.submit()
        
        assert len(j.subjobs) == 2, 'Splitting must have occured'
        for jj in j.subjobs:
            assert jj._impl._getParent(), 'Parent must be set'
        
        #make sure we have out job in the repository
        job_seen = False
        for jj in jobs:
            if j is jj:
                job_seen = True
                break
            
        assert job_seen, 'Job must be in the repository'
        pickle.dump(str(j.id),open(self.fileName,'w'))

    def pass2(self):
        """ Second pass of this multipass test"""

        id = int(pickle.load(open(self.fileName)))
        j = jobs(id)
        
        assert j, 'job should not be null'
        assert len(j.subjobs) == 2, 'Splitting must have occured'
        for jj in j.subjobs:
            assert jj._impl._getParent(), 'Parent must be set'

        
            