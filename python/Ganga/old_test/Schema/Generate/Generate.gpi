import sys, traceback
from Ganga.Utility.Plugin import allPlugins
from Ganga.Utility.logging import getLogger
from Ganga.Utility.Config import getConfig, setConfigOption
from Ganga.Core.GangaRepository import getRegistry

logger = getLogger()

##We have to determine the Ganga version this way because the PRE always thinks config['System']['GANGA_VERSION'] is GANGA-SVN
this_version=getConfig('System')['GANGA_PYTHONPATH'].split('/')[6]
this_repo=getConfig('Configuration')['gangadir']
excludelist = getConfig('TestingFramework')['SchemaTest_ignore_obj']

for item in ['TestGangaObject', 'EmptyDataset', 'TestListViewDataset', 'TestDataset']:
    excludelist.append(item)

logger.info('#################### RUNNING JOB GENERATOR')
logger.info('#################### Executing Ganga version: ' + this_version)
logger.info('#################### Creating repo at: ' + this_repo)
logger.error('#################### Exclude: ' + str(excludelist))


totnumobs = 0
numerrors = 0

box.clean(confirm=True,force=True)

numleft = len(box)

#for all objects not on the exclusion list, add one of them to the box
for category in allPlugins.all_dict:
    if category not in excludelist:
        logger.warn(category + " not found in excludelist")
        for clsname in allPlugins.all_dict[category]:
            if clsname not in excludelist:
                logger.debug(clsname + " not found in excludelist")
                logger.info('##########################################')
                cls = allPlugins.find(category, clsname)
                logger.info("Class: " +str(cls))

                new_name = str(this_version + "_" + category + "_" + clsname)
                logger.info("Ganga Box name: " + str(new_name))

#the following if statement (using box.select) will not work on Ganga versions < 5.8.17 (see bug #98232)
#therefore, use the following to generate schemas prior to that
                if new_name + " |" not in box.__str__():
    #            if len(box.select(name=new_name)) == 0:
                    try:
                        logger.info(str(new_name) + " not found in box...adding object #" + str(totnumobs) + "...")
                        box.add(cls.__call__(), new_name)
                        totnumobs += 1
                    except Exception as e:
                        logger.error("We got some sort of error: " + str(sys.exc_info()[0]))
                        logger.error(str(e))
                        logger.error(traceback.print_exc())
                        numerrors += 1

                        raise e
                else:
                    logger.warn("Already in box: " + str(new_name))

logger.info('##########################################')
logger.info('Total number of objects added to Box: ' + str(totnumobs))
logger.info('##########################################')

if totnumobs > 0:
    assert totnumobs == len(box), 'We failed to create the correct number of test objects. %i created, %i expected' % ( totnumobs, len(box) )
else:
    logger.warning("We didn't create any test objects; perhaps they all existed already?")
    logger.warning("There are %i objects in the box repository" % (len(box)))

assert numerrors == 0, '%i errors were raised when trying to generate Ganga objects.' % (numerrors)



