from GangaTest.Framework.utils import sleep_until_completed

import datetime

#single

j1 = Job()

assert 'new' in j1.time.timestamps.keys()

assert isinstance(j1.time.new(), datetime.datetime)

j2 = j1.copy()

assert 'new' in j2.time.timestamps.keys()

assert isinstance(j2.time.new(), datetime.datetime)

assert j2.time.new() - j1.time.new() > datetime.timedelta(0,0,0), "j2 'new' is not more recent than j1 'new'"

#subjobs

j3 = Job()

j3.splitter='ArgSplitter'
j3.splitter.args=[[],[],[]]

assert 'new' in j3.time.timestamps.keys()
assert isinstance(j3.time.new(), datetime.datetime)

j3.submit()

assert sleep_until_completed(j3, 300)

for sjs in j3.subjobs:
    assert 'new' in sjs.time.timestamps.keys()

j4 = j3.copy()

assert 'new' in j4.time.timestamps.keys()
assert isinstance(j4.time.new(), datetime.datetime)

assert j4.time.new() - j3.time.new() > datetime.timedelta(0,0,0), "j4 'new' is not more recent than j3 'new'"

for sjs in j4.subjobs:
    assert 'new' not in sjs.time.timestamps.keys()

j4.submit()

assert sleep_until_completed(j4, 300)

for i in range(0,len(j4.subjobs)):
    for j in range(0,len(j3.subjobs)):
        assert j4.subjobs(i).time.new() > j3.subjobs(j).time.new()

#end
