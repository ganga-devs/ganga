from GangaTest.Framework.utils import sleep_until_completed
import os

dictConfig = config.Output.MassStorageFile
dictConfig['uploadOptions']['path'] = dictConfig['uploadOptions']['path'].replace('$user', '%s/%s' % (os.environ['USER'][0], os.environ['USER']))
config.Output.MassStorageFile = dictConfig

dictConfigM = config.Output.MassStorageFile
dictConfigM['fileExtensions'].append('fillrandom.root')
config.Output.MassStorageFile = dictConfigM

dictConfigL = config.Output.LCGSEFile
dictConfigL['fileExtensions'].append('fillrandom1.root')
config.Output.LCGSEFile = dictConfigL

j = Job(application=Root(),backend=LSF())

j.application.script = File('fillrandom2.py')

j.outputfiles = ['fillrandom.root', 'fillrandom1.root', 'fillrandom2.root']
j.outputfiles[0].compressed = True
j.outputfiles[1].compressed = True
j.outputfiles[2].compressed = True

from Ganga.GPIDev.Base.Proxy import getName
assert(getName(j.outputfiles[0]) == 'MassStorageFile')
assert(getName(j.outputfiles[1]) == 'LCGSEFile')
assert(getName(j.outputfiles[2]) == 'LocalFile')

j.submit()

assert(sleep_until_completed(j, timeout=1200))

assert(j.outputfiles[0].location() != [])
assert(j.outputfiles[1].location() != [])

j.outputfiles[0].localDir = j.outputdir
j.outputfiles[1].localDir = j.outputdir

j.outputfiles[0].get()
j.outputfiles[1].get()

import time
time.sleep(30)

for filename in ['fillrandom.root.gz', j.outputfiles[1].location()[0][-10:], 'fillrandom2.root.gz']:
    assert(filename in os.listdir(j.outputdir)) 
    
