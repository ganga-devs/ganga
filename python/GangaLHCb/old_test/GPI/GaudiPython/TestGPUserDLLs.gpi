import os
import os.path
from os.path import join
from GangaTest.Framework.utils import sleep_until_completed
import tempfile

def file_find_replace(fname,find,replace,new_name=None):
    file = open(fname,'r')
    text = file.read()
    file.close()
    text = text.replace(find,replace)
    move = False
    if new_name is None:
        new_name = fname + '.tmp'
        move = True
    file = open(new_name, 'w')
    file.write(text)
    file.close()
    if move: os.system('mv %s %s' % (new_name,fname))
#
#j = Job(application=GaudiPython())
#ura = tempfile.mkdtemp()
##j.application.version = 'v22r1'
#j.application.user_release_area = ura
#j.application.getpack( "Tutorial/Analysis v8r0" )
#j.application.masterpackage = "Phys/DaVinci"
#
#app = j.application
#top_dir = '%s/DaVinci_%s/Tutorial/Analysis/' % (ura, app.version)
#sol_dir = '%s/solutions/DaVinci1/' % top_dir
#os.system('cp %s/TutorialAlgorithm.* %s/src/.' % (sol_dir, top_dir))
#fname = '%s/src/TutorialAlgorithm.cpp' % top_dir
#file_find_replace(fname,'# muons','# muons n@, Go Steelers!')
#j.application.make()
#
#app.script = ['GPUserDLLsOptions.py']
#app.script.append('%s/DVTutorial_1.py' % sol_dir)
#app.script.append('%s/options/Bs2JpsiPhi2008.py' % top_dir)
#
#j.submit()
#assert sleep_until_completed(j,1200)
#os.system('rm -rf %s' % j.application.user_release_area)
#
#input_dir = j.outputdir + '../input'
#os.system('cd %s && tar -xzvf _input_sandbox_%d.tgz' % (input_dir,j.id))
#os.system('cd %s && tar -xzvf _input_sandbox_%d_master.tgz' % (input_dir,j.id))
#
#the_lib = input_dir + '/lib/libAnalysis.so'
#
#os.system('ls -al %s' % input_dir)
#
#assert os.path.exists(the_lib), 'lib not shipped!'
#
# for some reason this check doesn't work in the testing but does work when I
# run it interactively
#fname = join(j.outputdir,'stdout')
#file = open(fname)
#found_line = False
#print('stdout = ')
#for line in file.readlines():
#    print(line)
#    if line.find('# muons n@, Go Steelers!') >= 0:
#        found_line = True
#        assert int(line.split('|')[3]) > 0, 'problem reading data'
#        print('# muons =', int(line.split('|')[3]))
#        break
#file.close()
#assert found_line, 'special string not found'


