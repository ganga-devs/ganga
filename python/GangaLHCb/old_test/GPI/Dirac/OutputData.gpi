from GangaTest.Framework.utils import sleep_until_completed, write_file, file_contains
from os import mkdir, chmod
from os.path import join,basename,exists
import tempfile

# Job with a script
scriptname=tempfile.mktemp('.py')
write_file(scriptname,"""#!/bin/env python
from random import choice
import string
f=open('outputs.txt','w')
f.write('This is a test\\n')
import time
f.write('Time:%s' % time.strftime('%X %x %Z') )
import random
str=''.join(random.SystemRandom().choice(string.ascii_uppercase + string.digits) for _ in range(1024) )
f.write(str)
chars = string.letters + string.digits
kbyte=1024
text=''.join([choice(chars) for i in range(kbyte)])
f.write(text)
f.close()
""")
os.chmod(scriptname, 777)
jscript=Job(name='OutputData',application=Executable(),backend=Dirac())
jscript.backend.settings['CPUTime'] = 300
jscript.application.exe = File(scriptname)
jscript.application.args=[]
jscript.outputfiles=[DiracFile('outputs.txt')]
jscript.submit()

sleep_until_completed(jscript)
assert jscript.status == 'completed', 'job must complete. it is: %s' % jscript.status

output_file = join(jscript.outputdir,'outputs.txt')
if os.path.exists(output_file):
    os.unlink(output_file)

if os.path.exists(join(jscript.outputdir,'std.out')):
    file = open(join(jscript.outputdir,'std.out'))
    print('std.out =', file.read())
    file.close()
if os.path.exists(join(jscript.outputdir,'stdout')):
    file = open(join(jscript.outputdir,'stdout'))
    print('stdout =', file.read())
    file.close()

downloadedFiles = jscript.backend.getOutputData()
print('downloadedFiles',downloadedFiles)

#assert 'output.txt' in downloadedFiles, 'output.txt must be downloaded - %s' \
#    % str(downloadedFiles)

import time
time.sleep(30)

assert exists(output_file), 'File must exist'

assert(file_contains(output_file,'This is a test'))
lfns = jscript.backend.getOutputDataLFNs()
assert len(lfns) == 1, 'We only expect one LFN'
print('lfns',lfns)
assert basename(lfns[0].name) == 'outputs.txt', 'Check the LFN is as expected'

jscript.outputfiles[0].remove()
