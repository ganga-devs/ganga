from GangaLHCb.test import *
from Ganga.Utility.Shell import Shell

def getInstalledVersions(application):
    name = application.__class__.__name__
    platform = application.platform
    release_area = '%s_release_area' % name
    user_release_area = application.user_release_area

    script = """#!/bin/sh
unalias -a
unset CMTPROJECTPATH
export CMTCONFIG="%(PLATFORM)s"
export User_release_area="%(USER_RELEASE_AREA)s"
. $LHCBHOME/scripts/setenvProject.sh %(PROJECT)s --list-versions
""" % {'PLATFORM':platform,'USER_RELEASE_AREA':user_release_area,'PROJECT':name}
    import tempfile, os, sys
    
    shName = tempfile.mktemp('.sh')
    outfile = file(shName,'w')
    try:
        outfile.write(script)
    finally:
        outfile.close()
        
    os.chmod(shName,0777)
    
    shell = Shell()
    rc, output, m = shell.cmd1(shName)
    
    if rc == 0: os.unlink(shName)
    
    installedVersions = []
    
    release_area_dir = os.environ[release_area]
    for l in output.split('\n'):
        tokens = l.split(' ')
        if len(tokens) == 3 and tokens[1] == 'in' and tokens[2] == release_area_dir:
            installedVersions.append(tokens[0])
        
    return installedVersions

app = DaVinci()
installedVersions = getInstalledVersions(app)
assert app.version in installedVersions, 'Default version of DaVinci must be installed'
    
testVersion = getTestDaVinciVersion()
app = DaVinci(version = testVersion)
installedVersions = getInstalledVersions(app)
assert app.version in installedVersions, 'Default version of DaVinci must be installed'