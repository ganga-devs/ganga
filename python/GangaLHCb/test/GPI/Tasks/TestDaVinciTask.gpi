# Test tasks for LHCb

from GangaTest.Framework.utils import write_file
import os,sys,time,string

#Clean up temporary files at the end
toClean = []

def createFile(fname,contents):
  """ Create a local file and keep track of it. 
      If a file of the same name already exists then
      remove it.
  """
  if os.path.exists(fname):
    os.remove(fname)
  write_file(fname,contents)
#  fopen = open(fname,'w')
#  fopen.write(contents)
#  fopen.close()
  toClean.append(fname)

#First make a simple DaVinci application that should work
#out of the box:
appName = 'DaVinci'
evtsPerJob = 5

optsName = '%s.py' %(string.lower(appName))
options = ['from Configurables import %s' %(appName)]
options.append('app = %s()' %(appName))
options.append('app.DataType="2010"')
options.append('app.EvtMax=%s' %(evtsPerJob))
options.append('app.HistogramFile="%sHisto.root"' %(appName))
createFile(optsName,string.join(options,'\n')+'\n')

app = DaVinci()
app.platform = 'x86_64-slc5-gcc43-opt'
app.version = 'v28r1p1'
app.optsfile = [optsName]

jt = Job()
jt.application = app
jt.outputsandbox = ['*.root', '*.py', '*.xml', '*.log']
jt.backend = Dirac()

#Prepare some 'data' to process, this time using a BK query
bkQueryList = []
bkQueryList.append(BKQuery('/LHCb/Collision10/Beam450GeV-VeloOpen-MagUp/RecoStripping-03/90000000/MINIBIAS.DST'))
bkQueryList.append(BKQuery('/LHCb/Collision10/Beam450GeV-VeloOpen-MagDown/RecoStripping-03/90000000/MINIBIAS.DST'))
#NOTICE the OLD BK has a different path - I wasted a lot of time here because of this!
#bkQueryList = []
#bkQueryList.append(BKQuery('/LHCb/Collision10/Beam450GeV-VeloOpen-MagUp/Real Data+RecoStripping-03/90000000/MINIBIAS.DST'))
#bkQueryList.append(BKQuery('/LHCb/Collision10/Beam450GeV-VeloOpen-MagDown/Real Data+RecoStripping-03/90000000/MINIBIAS.DST'))

#Now start to prepare the AnalysisTask, this would be 
#a more usual starting point for users

task = AnalysisTask()
task.setTemplate(jt)
task.name = 'MyTaskTest'
task.setQuery(bkQueryList,filesPerJob=40) 
task.float = 5
print task
#task.run()
